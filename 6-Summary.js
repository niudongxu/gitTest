//生成器的内部构成

//调用一个生成器不会实际执行它。 相反，它创建了一个新的迭代器，通过该迭代器我们才能从生成器中请求值。在生成器生成或（让渡）了一个值后，生成器会挂起执行并等待下一个请求的到来。在某种方面来说， 生成器的工作更像是一个小程序，在一个状态中运动的状态机。

//-挂起开始————创建了一个生成器后，它最先以这种状态开始。其中的任何代码都未执行。
//-执行————生成器中的代码执行状态。执行要么是刚开始，要么是从上次挂起时继续的。当生成器对应迭代器调用了next方法，并且当前存在可执行的代码时，生成器都会转移到这个状态。
//-挂起让渡————当生成器在执行过程中一到了一个yield的表达式，它会创建一个包含着返回值的新对象，随后再挂起执行。生成器在这个状态暂停并等待继续执行。
//-完成———— 在生成器执行期间，如果代码执行到return语句或者全部代码执行完毕，生成器就进入该状态。