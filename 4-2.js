//函数调用

//可以通过4中方式调用一个函数
//1.作为一个函数（function）--skulk()，被直接调用
//  函数上下文（this 关键字的值）有两种可能性：非严格模式下，它将是全局上下文（window 对象），在严格模式下，它将是undefined
   

//2.作为一个方法（method） --ninja.skulk()，关联在对象上，实现面向对象编程
//  当函数作为某个方法被调用的时候， 该对象会成为函数的上下文， 并且在函数内部可以通过参数访问到。
//  这也是JavaScript实现面向对象编程的主要方式之一。


//3.作为一个构造函数（constructor） --new Ninja()，实例化一个新的对象。
//  使用关键词new 调用函数会触发以下的动作
//  1.创建一个新的空对象
//  2.该对象作为this参数传递给构造函数，从而成为构造函数上下文
//  3.新构造的对象作为new运算符的返回值
//  构造函数的目的是创建一个新对象，并进行初始化设置，然后将其作为构造函数的返回值


//4.通过函数的apply或者call方法 --skulk.apply(ninja) 或者 skulk.call(ninja)

